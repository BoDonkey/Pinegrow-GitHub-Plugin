{"version":3,"file":"index.js","sources":["../dist-src/value-to-tree-object.js","../dist-src/create-tree.js","../dist-src/create-commit.js","../dist-src/compose-create-pull-request.js","../dist-src/version.js","../dist-src/index.js"],"sourcesContent":["export async function valueToTreeObject(octokit, owner, repo, path, value) {\n    let mode = \"100644\";\n    if (value !== null && typeof value !== \"string\") {\n        mode = value.mode || mode;\n    }\n    // Text files can be changed through the .content key\n    if (typeof value === \"string\") {\n        return {\n            path,\n            mode: mode,\n            content: value,\n        };\n    }\n    // Binary files need to be created first using the git blob API,\n    // then changed by referencing in the .sha key\n    const { data } = await octokit.request(\"POST /repos/{owner}/{repo}/git/blobs\", {\n        owner,\n        repo,\n        ...value,\n    });\n    const blobSha = data.sha;\n    return {\n        path,\n        mode: mode,\n        sha: blobSha,\n    };\n}\n","import { valueToTreeObject } from \"./value-to-tree-object\";\nexport async function createTree(state, changes) {\n    const { octokit, owner, repo, fork, latestCommitSha, latestCommitTreeSha, } = state;\n    const tree = (await Promise.all(Object.keys(changes.files).map(async (path) => {\n        const value = changes.files[path];\n        if (value === null) {\n            // Deleting a non-existent file from a tree leads to an \"GitRPC::BadObjectState\" error,\n            // so we only attempt to delete the file if it exists.\n            try {\n                // https://developer.github.com/v3/repos/contents/#get-contents\n                await octokit.request(\"HEAD /repos/{owner}/{repo}/contents/:path\", {\n                    owner: fork,\n                    repo,\n                    ref: latestCommitSha,\n                    path,\n                });\n                return {\n                    path,\n                    mode: \"100644\",\n                    sha: null,\n                };\n            }\n            catch (error) {\n                return;\n            }\n        }\n        // When passed a function, retrieve the content of the file, pass it\n        // to the function, then return the result\n        if (typeof value === \"function\") {\n            let result;\n            try {\n                const { data: file } = await octokit.request(\"GET /repos/{owner}/{repo}/contents/:path\", {\n                    owner: fork,\n                    repo,\n                    ref: latestCommitSha,\n                    path,\n                });\n                result = await value(Object.assign(file, { exists: true }));\n            }\n            catch (error) {\n                // istanbul ignore if\n                if (error.status !== 404)\n                    throw error;\n                // @ts-ignore\n                result = await value({ exists: false });\n            }\n            if (result === null || typeof result === \"undefined\")\n                return;\n            return valueToTreeObject(octokit, owner, repo, path, result);\n        }\n        return valueToTreeObject(octokit, owner, repo, path, value);\n    }))).filter(Boolean);\n    if (tree.length === 0) {\n        return null;\n    }\n    // https://developer.github.com/v3/git/trees/#create-a-tree\n    const { data: { sha: newTreeSha }, } = await octokit.request(\"POST /repos/{owner}/{repo}/git/trees\", {\n        owner: fork,\n        repo,\n        base_tree: latestCommitTreeSha,\n        tree,\n    });\n    return newTreeSha;\n}\n","export async function createCommit(state, treeCreated, changes) {\n    const { octokit, repo, fork, latestCommitSha } = state;\n    const message = treeCreated\n        ? changes.commit\n        : typeof changes.emptyCommit === \"string\"\n            ? changes.emptyCommit\n            : changes.commit;\n    // https://developer.github.com/v3/git/commits/#create-a-commit\n    const { data: latestCommit } = await octokit.request(\"POST /repos/{owner}/{repo}/git/commits\", {\n        owner: fork,\n        repo,\n        message,\n        tree: state.latestCommitTreeSha,\n        parents: [latestCommitSha],\n    });\n    return latestCommit.sha;\n}\n","import { createTree } from \"./create-tree\";\nimport { createCommit } from \"./create-commit\";\nexport async function composeCreatePullRequest(octokit, { owner, repo, title, body, base, head, createWhenEmpty, changes: changesOption, draft = false, }) {\n    const changes = Array.isArray(changesOption)\n        ? changesOption\n        : [changesOption];\n    if (changes.length === 0)\n        throw new Error('[octokit-plugin-create-pull-request] \"changes\" cannot be an empty array');\n    const state = { octokit, owner, repo };\n    // https://developer.github.com/v3/repos/#get-a-repository\n    const { data: repository, headers } = await octokit.request(\"GET /repos/{owner}/{repo}\", {\n        owner,\n        repo,\n    });\n    const isUser = !!headers[\"x-oauth-scopes\"];\n    if (!repository.permissions) {\n        throw new Error(\"[octokit-plugin-create-pull-request] Missing authentication\");\n    }\n    if (!base) {\n        base = repository.default_branch;\n    }\n    state.fork = owner;\n    if (isUser && !repository.permissions.push) {\n        // https://developer.github.com/v3/users/#get-the-authenticated-user\n        const user = await octokit.request(\"GET /user\");\n        // https://developer.github.com/v3/repos/forks/#list-forks\n        const forks = await octokit.request(\"GET /repos/{owner}/{repo}/forks\", {\n            owner,\n            repo,\n        });\n        const hasFork = forks.data.find(\n        /* istanbul ignore next - fork owner can be null, but we don't test that */\n        (fork) => fork.owner && fork.owner.login === user.data.login);\n        if (!hasFork) {\n            // https://developer.github.com/v3/repos/forks/#create-a-fork\n            await octokit.request(\"POST /repos/{owner}/{repo}/forks\", {\n                owner,\n                repo,\n            });\n        }\n        state.fork = user.data.login;\n    }\n    // https://developer.github.com/v3/repos/commits/#list-commits-on-a-repository\n    const { data: [latestCommit], } = await octokit.request(\"GET /repos/{owner}/{repo}/commits\", {\n        owner,\n        repo,\n        sha: base,\n        per_page: 1,\n    });\n    state.latestCommitSha = latestCommit.sha;\n    state.latestCommitTreeSha = latestCommit.commit.tree.sha;\n    const baseCommitTreeSha = latestCommit.commit.tree.sha;\n    for (const change of changes) {\n        let treeCreated = false;\n        if (change.files && Object.keys(change.files).length) {\n            const latestCommitTreeSha = await createTree(state, change);\n            if (latestCommitTreeSha) {\n                state.latestCommitTreeSha = latestCommitTreeSha;\n                treeCreated = true;\n            }\n        }\n        if (treeCreated || change.emptyCommit !== false) {\n            state.latestCommitSha = await createCommit(state, treeCreated, change);\n        }\n    }\n    const hasNoChanges = baseCommitTreeSha === state.latestCommitTreeSha;\n    if (hasNoChanges && createWhenEmpty === false) {\n        return null;\n    }\n    // https://developer.github.com/v3/git/refs/#create-a-reference\n    await octokit.request(\"POST /repos/{owner}/{repo}/git/refs\", {\n        owner: state.fork,\n        repo,\n        sha: state.latestCommitSha,\n        ref: `refs/heads/${head}`,\n    });\n    // https://developer.github.com/v3/pulls/#create-a-pull-request\n    return await octokit.request(\"POST /repos/{owner}/{repo}/pulls\", {\n        owner,\n        repo,\n        head: `${state.fork}:${head}`,\n        base,\n        title,\n        body,\n        draft,\n    });\n}\n","export const VERSION = \"3.10.0\";\n","import { composeCreatePullRequest } from \"./compose-create-pull-request\";\nimport { VERSION } from \"./version\";\n/**\n * @param octokit Octokit instance\n */\nexport function createPullRequest(octokit) {\n    return {\n        createPullRequest: composeCreatePullRequest.bind(null, octokit),\n    };\n}\nexport { composeCreatePullRequest } from \"./compose-create-pull-request\";\ncreatePullRequest.VERSION = VERSION;\n"],"names":[],"mappings":"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"}